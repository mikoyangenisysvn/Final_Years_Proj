Day 1st 9/9/2025: tìm hiểu 
    - Về lí thuyết PWM mô tả một chuỗi các xung vuông nhưng đặt biệt ở chỗ thời gian cho giá trị 1 và giá trị 0 
là không đều nhau, trong 1 chu kì giá trị 1 có thể nhiều hoặc ít hơn giá trị 0.
CÂU HỎI: Chi dị?
-> Ứng dụng trong việc điều khiển động cơ, tần số chớp tắt đèn tạo tín hiệu,...
CÂU HỎI: Ròi làm sao biết 1 nhiều hay ít hơn 0 trong 1 chu kì?
-> Có 1 giá trị gọi là duty cycle (tạm dịch: chu kì nhiệm vụ; dịch dễ nhớ: nghĩa vụ xe đạp) thể hiện) % tồn 
tại của giá trị 1; ví dụ:
            1 bộ counter đếm counter 8 bit nghĩa là đếm từ 0 tới 255 - 256 giá trị
            Duty cho là 64; lấy (100*64)/256 = 25% => duty cycle = 25%

Ý TƯỞNG CHỈNH SỬA ĐỒ ÁN TIMER_IP THÀNH PWM
              +-------------------------+
           |        APB SLAVE        |
           | (giải mã addr, ghi/đọc) |
           +-----------+-------------+
                       |
                       v
             +------------------+
             |   Register Block |
             | duty_reg         |
             | period_reg       |
             | ctrl_reg         |
             | status_reg       |
             +--+-----------+---+
                |           |
     duty ------+           +------ period
                            |
                          counter
                            |
            +---------------+---------------+
            |                               |
   counter value                        event: counter==period
            |                               |
            v                               v
   +------------------+             +---------------+
   |   Comparator     |             | Interrupt     |
   | if cnt < duty    |             | Logic         |
   |   PWM_OUT = 1    |             | - set flag    |
   | else 0           |             | - IRQ out     |
   +--------+---------+             +-------+-------+
            |                               |
         PWM_OUT                          IRQ

=============================================================================================================================
Day 2nd 10/9/2025: thí nghiệm ý tưởng
                   +-------------------+
                   |      APB Bus      |
                   | (psel, penable,   |
                   |  pwrite, paddr,   |
                   |  pwdata, prdata)  |
                   +---------+---------+
                             |
                             v
                   +-------------------+
                   |     Register      |
                   |-------------------|
                   | DUTY_CYCLE [15:0] |
                   | PERIOD     [15:0] |
                   +---------+---------+
                             |
     +-----------------------+-----------------------+
     |                                               |
     v                                               v
+------------+                                +---------------+
|   Counter  |                                |  Comparator   |
|------------|   counter_value [15:0] ------> | counter vs    |
| count up   |                                | duty_cycle    |
| reset=0    |                                |               |
| when >=    |                                | pwm_out=1 if  |
| PERIOD     |                                | counter<duty  |
+------------+                                +-------+-------+
                                                     |
                                                     v
                                               +-------------+
                                               |   PWM_OUT   |
                                               +-------------+


Spec cho phiên bản PWM IP (mình soạn dạng đề bài, giống spec Timer IP cũ)
1. Overview

The PWM IP core is an extension of the Timer IP. It generates a Pulse Width Modulated (PWM) output based on programmable period and duty cycle registers. The design includes an APB slave interface for CPU access, prescaler for frequency adjustment, and optional interrupt signaling.

2. Key Features

APB slave interface (12-bit address, 32-bit data).

Up-counter with programmable period register (PERIOD).

Compare logic with duty register (DUTY) to generate PWM output.

Output signal: pwm_out.

Prescaler (divide clock by 2–256).

Timer enable/disable via register.

Interrupt generation at end of PWM period (optional).

Asynchronous active-low reset.

Debug mode (halt counter when dbg_mode = 1).

3. Block Diagram (mô tả text)

APB → điều khiển đọc/ghi register.

Register → chứa các thanh ghi: PERIOD, DUTY, CTRL, STATUS, PRESCALER.

Control Counter → tạo cnt_en.

Counter → đếm từ 0 → PERIOD, sau đó reset về 0.

Comparator → so sánh counter với DUTY để sinh pwm_out.

Interrupt → báo khi counter = PERIOD (end of cycle).

Top module → tích hợp tất cả.

4. Register Map (example)
Address	Name	Description
0x000	CTRL	[0] enable, [1] prescaler enable, [11:8] prescaler value
0x004	PERIOD	PWM period value
0x008	DUTY	PWM duty cycle value
0x00C	STATUS	[0] interrupt flag
0x010	INT_EN	[0] enable interrupt
0x014	CLEAR	write 1 to clear interrupt
5. Operation

CPU writes PERIOD and DUTY.

Counter increments each cnt_en cycle.

When counter < DUTY → pwm_out = 1, else pwm_out = 0.

When counter == PERIOD → counter resets to 0 and optional interrupt triggers.
